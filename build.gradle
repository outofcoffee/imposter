import com.amazonaws.auth.profile.ProfileCredentialsProvider

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.amazonaws:aws-java-sdk-core:1.12.437'
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.20' apply false
}

ext {
    kotlin_version = '1.9.20'

    try {
        awsCredentials = new ProfileCredentialsProvider().credentials
    } catch(ignored) {
        awsCredentials = null
    }

    mavenSnapshotRepository = 's3://gatehillsoftware-maven/snapshots'
    mavenReleaseRepository = 's3://gatehillsoftware-maven/releases'

    awsAccessKey = awsCredentials?.AWSAccessKeyId ?: System.getenv('AWS_ACCESS_KEY_ID') ?: project.findProperty('AWS_ACCESS_KEY_ID')
    awsSecretKey = awsCredentials?.AWSSecretKey ?: System.getenv('AWS_SECRET_ACCESS_KEY') ?: project.findProperty('AWS_SECRET_ACCESS_KEY')

    version_args4j = '2.33'
    version_aws_sdk = '1.12.581'
    version_coroutines = '1.7.3'
    version_hamcrest = '2.2'
    version_groovy = '4.0.26'
    version_guice = '5.1.0'
    version_jackson = '2.18.0'
    version_jackson_databind = '2.18.0'
    version_jaxb_api = '2.3.1'
    version_junit_jupiter = '5.10.0'
    version_log4j = '2.18.0'
    version_micrometer = '1.11.3'
    version_mockito = '5.16.0'
    version_mockito_kotlin = '4.1.0'
    version_s3mock = '2.8.0'
    version_testcontainers = '1.17.6'
    version_vertx = '4.5.13'
}

allprojects {
    version project.property('projectVersion')
}

subprojects {
    group 'io.gatehill.imposter'

    buildscript {
        ext {
            version_shadow = '8.3.5'
        }
        repositories {
            mavenCentral()
            maven {
                url "https://plugins.gradle.org/m2/"
            }
        }
        dependencies {
            classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
            classpath "com.gradleup.shadow:shadow-gradle-plugin:$version_shadow"
        }
    }

    configurations {
        pluginImplementation.description = 'Only dependencies (and their transitive dependencies) using this configuration will be bundled in the plugin shadow JAR.'
        implementation.extendsFrom(pluginImplementation)
    }

    repositories {
        mavenCentral()
    }

    plugins.withType(JavaPlugin).whenPluginAdded {
        java {
            toolchain {
                languageVersion = JavaLanguageVersion.of(11)
            }
        }

        tasks.withType(JavaCompile) {
            sourceCompatibility = '11'
            targetCompatibility = '11'
        }

        test {
            useJUnitPlatform {
                if (project.hasProperty('onlyVerticleTests')) {
                    includeTags 'verticle'
                }
            }
        }

        dependencies {
            testImplementation "org.junit.jupiter:junit-jupiter-api:$version_junit_jupiter"
            testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$version_junit_jupiter"
            testRuntimeOnly "org.junit.platform:junit-platform-launcher:1.10.0"
        }

        project.archivesBaseName = project.name.startsWith('imposter-') ? project.name : 'imposter-' + project.name
    }

    plugins.withType(org.jetbrains.kotlin.gradle.plugin.KotlinPluginWrapper).whenPluginAdded {
        kotlin {
            jvmToolchain {
                languageVersion.set(JavaLanguageVersion.of(11))
            }
        }
    }
}

wrapper {
    gradleVersion = '8.11'
}
